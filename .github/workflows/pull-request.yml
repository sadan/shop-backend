# This workflow is used to perform some tests on the Docker image. Right now we only use the test image to perform
# check lint and unittest but later one we'll also deploy this image in a preview or testing environment to run
# integration tests or do manual tests as well.

name: pull-request
on:
  pull_request:
    types:
      - opened
      - edited
      - synchronize
      - reopened
    branches:
      - 'main'

jobs:
  build-image:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_FOR_GITHUB }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_FOR_GITHUB }}
          role-to-assume: ${{ secrets.AWS_ECR_GITHUB_ROLE_ARN }}
          role-duration-seconds: 1200
          aws-region: eu-west-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: shop-backend
          IMAGE_TAG: pr-${{ github.event.pull_request.number }}-${{ github.run_number }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG . --target=test
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  checks:
    needs: build-image
    runs-on: ubuntu-latest

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_FOR_GITHUB }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_FOR_GITHUB }}
          role-to-assume: ${{ secrets.AWS_ECR_GITHUB_ROLE_ARN }}
          role-duration-seconds: 1200
          aws-region: eu-west-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Lint
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: shop-backend
          IMAGE_TAG: pr-${{ github.event.pull_request.number }}-${{ github.run_number }}
        run: docker run --entrypoint='' $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG make lint

      - name: Unittests
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: shop-backend
          IMAGE_TAG: pr-${{ github.event.pull_request.number }}-${{ github.run_number }}
        run: docker run --entrypoint='' --env SECRET_KEY="${{ secrets.DJANGO_SECRET_KEY }}" $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG make unittests
